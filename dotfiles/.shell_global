stty -ixon

if [ "$(uname)" != "Darwin" ]; then
    eval $(dircolors ~/.ls_colors)
fi

# =============================================================================
# locale
# =============================================================================

export LANG="en_US.UTF-8"
export LANGUAGE="en_US"
export LC_CTYPE="en_US.UTF-8"
export LC_NUMERIC="en_US.UTF-8"
export LC_TIME="en_US.UTF-8"
export LC_COLLATE="en_US.UTF-8"
export LC_MONETARY="en_US.UTF-8"
export LC_MESSAGES="en_US.UTF-8"
export LC_PAPER="en_US.UTF-8"
export LC_NAME="en_US.UTF-8"
export LC_ADDRESS="en_US.UTF-8"
export LC_TELEPHONE="en_US.UTF-8"
export LC_MEASUREMENT="en_US.UTF-8"
export LC_IDENTIFICATION="en_US.UTF-8"
export LC_ALL=


# =============================================================================
# file navigation
# =============================================================================

if [ -x /usr/bin/dircolors ]; then
    alias dir="dir --color=auto"
    alias egrep="egrep --color=auto"
    alias fgrep="fgrep --color=auto"
    alias grep="grep --color=auto"
    alias ls="ls --color=auto"
    alias vdir="vdir --color=auto"
fi

alias cpr="cp -r"
alias l="ls -CF"
alias la="ls -A"
alias ll="ls -alFh"
alias rmr="rm -rfv"

cl () {  # cd && l
    [ -d "$1" ] && cd "$1" && l
}

cll () {  # cd && ll
    [ -d "$1" ] && cd "$1" && ll
}

mkcd () {  # mkdir && cd
    mkdir -p "$1" && cd "$1"
}

# =============================================================================
# git
# =============================================================================

alias gita="git add"
alias gitc="git commit -a -m"
alias gitca="git commit --amend"
alias gitd="git diff"
alias gitl="git log --graph --decorate --oneline"
# alias gitl="git log --pretty=format:'%C(yellow)%h%Creset %C(bold)%s%Creset %C(blue)<%an>%Creset %Cred%D %Creset%Cgreen(%cr)%Creset' --graph"
alias gitp="git pull"
alias gitP="git push && git push origin --tags"
alias gits="git status"

gitpsub () {
  for DIR in */; do
    echo
    echo "=============================="
    echo
    if [ -d "$DIR/.git" ]; then
      echo "Pulling latest changes in $DIR..."
      (
        cd "$DIR" || exit 1
        git pull
      )
    else
      echo "Skipping $DIR (not a git repository)"
    fi
  done
}

# =============================================================================
# python
# =============================================================================

alias python3="python3.11"
alias python="python3.11"
alias py="python3.11"
alias pip="python3.11 -m pip"
alias py10="python3.10"
alias pip10="python3.10 -m pip"
alias py11="python3.11"
alias pip11="python3.11 -m pip"
alias py12="python3.12"
alias pip12="python3.12 -m pip"

make_venv () {
    local _VENV=${VIRTUAL_ENV:-"$(pwd)/venv"}
    if [ -d "$_VENV" ]; then
        echo "Virtual env already exists: $_VENV"
    else
        local _PYTHON_VERSION=${1:-3.11}
        echo "Creating virtual env at: $_VENV"
        echo "Python version: $_PYTHON_VERSION"
        virtualenv "$_VENV" -p "python$_PYTHON_VERSION"
    fi
    patch_virtualenv
    _pip="$_VENV/bin/pip"
    . "$_VENV/bin/activate"
    $_pip install -U pip
    [ -f "requirements.txt" ] && $_pip install -U -r requirements.txt
    [ -f "requirements.dev.txt" ] && $_pip install -U -r requirements.dev.txt
    [ -f "requirements-dev.txt" ] && $_pip install -U -r requirements-dev.txt
    echo
    echo Python aliases status
    echo ---------------------
    whichp
}

patch_virtualenv () {
    local _VENV=${VIRTUAL_ENV:-"$(pwd)/venv"}
    local _ACTIVATE="$_VENV/bin/activate"
    local _PYTHON="$_VENV/bin/python"
    echo "Patching $_ACTIVATE"
    echo "[ -f ~/.shell_prompt ] && . ~/.shell_prompt" >> "$_ACTIVATE"
    echo "alias python=\"$_PYTHON\"" >> "$_ACTIVATE"
    echo "alias py=\"$_PYTHON\"" >> "$_ACTIVATE"
    echo "alias pip=\"$_PYTHON -m pip\"" >> "$_ACTIVATE"
}

whichp () {
    echo "python     ┬ $(which python)"
    echo "py         | $(which py)"
    echo "pip        ┴ $(which pip)"
    echo "python3.10 ┬ $(which python3.10)"
    echo "py10       | $(which py10)"
    echo "pip10      ┴ $(which pip10)"
    echo "python3.11 ┬ $(which python3.11)"
    echo "py11       | $(which py11)"
    echo "pip11      ┴ $(which pip11)"
    echo "python3.12 ┬ $(which python3.12)"
    echo "py12       | $(which py12)"
    echo "pip12      ┴ $(which pip12)"
}


# =============================================================================
# other
# =============================================================================

alias C="clear && cd ~"
alias c="clear"
alias ping8="ping 8.8.8.8"
alias tree="tree -a"
alias ux="chmod u+x"

ytdlmp3 () {
    yt-dlp --ignore-errors --format "(bestaudio[acodec^=opus]/bestaudio)/best" \
        --extract-audio --audio-format mp3 --audio-quality 0 \
        -o "%(playlist_index)s - %(title)s.%(ext)s" "$*"
}

man () {
  env \
    LESS_TERMCAP_mb=$(printf "\e[1;31m") \
    LESS_TERMCAP_md=$(printf "\e[1;31m") \
    LESS_TERMCAP_me=$(printf "\e[0m") \
    LESS_TERMCAP_se=$(printf "\e[0m") \
    LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
    LESS_TERMCAP_ue=$(printf "\e[0m") \
    LESS_TERMCAP_us=$(printf "\e[1;32m") \
    man "$@"
}

# =============================================================================
# specialized file operations
# =============================================================================

# removes common trash files
rmtmp () {
    # tex
    find . -type d -name "_minted*"         -print -delete
    find . -type f -name "*.aux"            -print -delete
    find . -type f -name "*.bbl"            -print -delete
    find . -type f -name "*.blg"            -print -delete
    find . -type f -name "*.idx" -not -path "**/.git/**" -print -delete
    find . -type f -name "*.ilg"            -print -delete
    find . -type f -name "*.ind"            -print -delete
    find . -type f -name "*.log"            -print -delete
    find . -type f -name "*.out"            -print -delete
    find . -type f -name "*.synctex.gz"     -print -delete
    find . -type f -name "*.synctex(busy)"  -print -delete
    find . -type f -name "*.toc"            -print -delete
    find . -type f -name "*.fdb_latexmk"    -print -delete
    find . -type f -name "*.fls"            -print -delete
    find . -type f -name "*.nav"            -print -delete
    find . -type f -name "*.snm"            -print -delete
    find . -type f -name "*.xdv"            -print -delete
    # gluplot
    find . -type f -name "*.*.gnuplot"      -print -delete
    find . -type f -name "*.*.table"        -print -delete
    # compilers
    find . -type f -name "*.class"          -print -delete
    find . -type f -name "*.java~"          -print -delete
    find . -type f -name "*.o"              -print -delete
    # mac
    if [ "$(uname)" != "Darwin" ]; then
        find . -type d -name ".Spotlight-V100"  -print -delete
        find . -type d -name ".Trashes"         -print -delete
        find . -type f -name "._*"              -print -delete
        find . -type f -name "*.DS_Store"       -print -delete
    fi
}

# =============================================================================
# tmux
# =============================================================================

alias ta="tmux attach || tmux"
alias tk="tmux kill-session -t"
alias tl="tmux list-session"
